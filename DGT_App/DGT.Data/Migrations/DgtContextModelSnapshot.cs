// <auto-generated />
using System;
using DGT.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DGT.Data.Infrastructure.Migrations
{
    [DbContext(typeof(DgtContext))]
    partial class DgtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DGT.Data.Domain.Entities.Conductor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnName("Apellidos")
                        .HasMaxLength(150);

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnName("DNI")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasMaxLength(50);

                    b.Property<int>("Puntos")
                        .HasColumnName("Puntos");

                    b.HasKey("Id");

                    b.ToTable("Conductor");
                });

            modelBuilder.Entity("DGT.Data.Domain.Entities.ConductorVehiculo", b =>
                {
                    b.Property<int>("ConductorId");

                    b.Property<int>("VehiculoId");

                    b.HasKey("ConductorId", "VehiculoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("ConductorVehiculo");
                });

            modelBuilder.Entity("DGT.Data.Domain.Entities.Infraccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConductorId");

                    b.Property<DateTime>("FechaInfraccion")
                        .HasColumnName("FechaInfraccion");

                    b.Property<string>("IdTipoInfraccion");

                    b.HasKey("Id");

                    b.HasIndex("ConductorId");

                    b.HasIndex("IdTipoInfraccion");

                    b.ToTable("Infraccion");
                });

            modelBuilder.Entity("DGT.Data.Domain.Entities.TipoInfraccion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasMaxLength(25);

                    b.Property<int>("CostePuntos")
                        .HasColumnName("CostePuntos");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("TipoInfraccion");
                });

            modelBuilder.Entity("DGT.Data.Domain.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnName("Marca")
                        .HasMaxLength(50);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnName("Matricula")
                        .HasMaxLength(10);

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnName("Modelo")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("DGT.Data.Domain.Entities.ConductorVehiculo", b =>
                {
                    b.HasOne("DGT.Data.Domain.Entities.Conductor", "Conductor")
                        .WithMany("VehiculosHabituales")
                        .HasForeignKey("ConductorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DGT.Data.Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany("ConductoresHabituales")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DGT.Data.Domain.Entities.Infraccion", b =>
                {
                    b.HasOne("DGT.Data.Domain.Entities.Conductor", "Conductor")
                        .WithMany()
                        .HasForeignKey("ConductorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DGT.Data.Domain.Entities.TipoInfraccion", "TipoInfraccion")
                        .WithMany()
                        .HasForeignKey("IdTipoInfraccion");
                });
#pragma warning restore 612, 618
        }
    }
}
